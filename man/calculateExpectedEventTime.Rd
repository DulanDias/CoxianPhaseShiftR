% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateExpectedEventTime.R
\name{calculateExpectedEventTime}
\alias{calculateExpectedEventTime}
\title{Calculate Expected Event Time for Coxian Phase-Type Distribution}
\usage{
calculateExpectedEventTime(
  model_object,
  new_observation,
  n_phases,
  current_phase,
  current_time,
  upper_time = 10000,
  strata_by
)
}
\arguments{
\item{model_object}{An object containing the fitted model, including transition rates.}

\item{new_observation}{A dataframe or a vector containing the covariate values for the new observation.}

\item{n_phases}{The total number of phases in the Coxian model.}

\item{current_phase}{The current phase of the observation for which the expected time is calculated.}

\item{current_time}{The current time from which the expectation is calculated. This is the lower limit for the integration.}

\item{upper_time}{Optional upper limit for numerical integration to approximate infinity. Defaults to 10000, which should be adjusted based on the distribution's characteristics.}

\item{strata_by}{A string specifying the column name in new_observation used for stratification, aligning with the model's structure.}
}
\value{
A numeric value representing the expected event time for the given observation. If the integration does not converge or if there are numerical issues, the function returns `NA` and issues a warning.
}
\description{
This function calculates the expected event time for a given observation
within a Coxian phase-type distribution model. It uses numerical integration
to compute the expected value based on the probability density function (PDF)
derived from the model's transition rates.
}
\examples{
\dontrun{
  # Assume `model_object` is a pre-fitted model object
  # `new_observation` is a dataframe or vector with covariate values
  expected_time <- calculateExpectedEventTime(model_object, new_observation,
                          n_phases = 3, current_phase = 1, current_time = 0,
                          upper_time = 10000, strata_by = "phase")
  print(expected_time)
}

}
